{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Verdana-Bold;\f1\fnil\fcharset0 Verdana;\f2\fswiss\fcharset0 Helvetica;
\f3\fswiss\fcharset0 Helvetica-Bold;\f4\fswiss\fcharset0 Arial-BoldMT;\f5\fswiss\fcharset0 ArialMT;
\f6\fnil\fcharset0 HelveticaNeue;\f7\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red48\green48\blue48;\red0\green0\blue255;\red60\green69\blue75;
\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c24706\c24706\c24706;\cssrgb\c0\c0\c100000;\cssrgb\c30196\c34118\c36471;
\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww21060\viewh8280\viewkind1
\deftab720
\pard\pardeftab720\sl256\slmult1\sa160\qc\partightenfactor0

\f0\b\fs36 \cf2 \ul \ulc2 Learners Academy Administration \
\pard\pardeftab720\sl276\slmult1\partightenfactor0

\f1\b0\fs24 \cf2 \ulnone This document contains sections for: \
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl256\slmult1\partightenfactor0
\ls1\ilvl0
\f2 \cf2 		
\f1 \cf3 \ul \ulc3 Description of the project\cf2 \ulnone  \
\pard\tx360\tx720\pardeftab720\li720\fi-720\sl256\slmult1\partightenfactor0
\ls1\ilvl0
\f2 \cf2 		
\f1 \cf3 \ul Core concepts used in project\cf2 \ulnone \
\ls1\ilvl0
\f2 		
\f1 \cf3 \ul Flow of the Application\cf2 \ulnone .\
\ls1\ilvl0
\f2 		
\f1 \cf3 \ul Demonstrating the product capabilities, appearance, and user interactions.\cf2 \ulnone \
\pard\pardeftab720\sl256\slmult1\partightenfactor0
\cf2 \
\
			
\f0\b\fs32 Description of the project\

\f1\b0\fs24 \
\pard\pardeftab720\sa200\partightenfactor0

\f2\fs28 \cf4 \cb5 As a Full Stack Developer, design and develop a backend administrative portal for the Learner\'92s Academy. Use the GitHub repository to manage the project artifacts.\'a0\
\'a0\
\pard\pardeftab720\sa200\partightenfactor0

\f3\b \cf4 \ul \ulc4 Background of the problem statement:
\f2\b0 \ulnone \
Learner\'92s Academy is a school that has an online management system. The system keeps track of its classes, subjects, students, and teachers. It has a back-office application with a single administrator login.\
\'a0\

\f3\b \ul The administrator can:
\f2\b0 \ulnone \
\pard\pardeftab720\li800\fi-800\sa200\partightenfactor0
\cf4 \uc0\u9679  Set up a master list of all the subjects for all the classes\u8232 \u9679  Set up a master list of all the teachers\u8232 \u9679  Set up a master list of all the classes\u8232 \u9679  Assign classes for subjects from the master list\u8232 \u9679  Assign teachers to a class for a subject (A teacher can be assigned to different classes for different subjects)\u8232 \u9679  Get a master list of students (Each student must be assigned to a single class)\
\
\
\
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0

\f0\b\fs32 \cf2 \cb1 Core concepts used in the Project\
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0

\f4 \cf6 \
\pard\pardeftab720\partightenfactor0

\f2\b0\fs28 \cf4 \cb5 \uc0\u9679  Eclipse/IntelliJ: An IDE to code for the application\'a0\
\uc0\u9679  Java: A programming language to develop the web pages, databases, and others\
\uc0\u9679  SQL: To create tables for admin, classes, students, and other specifics\
\uc0\u9679  Git: To connect and push files from the local system to GitHub\'a0\
\uc0\u9679  GitHub: To store the application code and track its versions\'a0\
\uc0\u9679  Scrum: An efficient agile framework to deliver the product incrementally\'a0\
\uc0\u9679  Search and Sort techniques: Data structures used for the project\'a0\
\uc0\u9679  Specification document: Any open-source document or Google Docs\'a0\
\
\pard\pardeftab720\sl276\slmult1\partightenfactor0

\f4\b\fs32 \cf6 \cb1 \
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0
\cf6 \ul \ulc2 Entities diagram \
\pard\pardeftab720\sl276\slmult1\partightenfactor0
\cf6 Entity list:\
\pard\pardeftab720\sl276\slmult1\partightenfactor0

\f5\b0 \cf6 \ulnone Classes\
Subjects\
Teacher\
Student\
\
\pard\pardeftab720\sl276\slmult1\partightenfactor0

\f4\b \cf6 \
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0
\cf6 \ul FlowChart of the project \
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0
\cf6 \ulnone \
\pard\pardeftab720\sl276\slmult1\qc\partightenfactor0
\cf6 \ul Entities programs\
1.Classes\
\pard\pardeftab560\qj\partightenfactor0

\f6\b0\fs20 \cf6 \ulnone package org.simplilearn.lms.entities;\
\
import java.util.HashSet;\
import java.util.Set;\
import javax.persistence.CascadeType;\
import javax.persistence.Column;\
import javax.persistence.Entity;\
import javax.persistence.GeneratedValue;\
import javax.persistence.GenerationType;\
import javax.persistence.Id;\
import javax.persistence.ManyToMany;\
import javax.persistence.OneToMany;\
import javax.security.auth.Subject;\
\
@Entity\
\
public class AcadamicClass \{\
	@Id\
	@GeneratedValue(strategy = GenerationType.IDENTITY)\
	private int cid;\
	\
	@Column\
	private String name;\
	\
	@Column\
	private int duration;\
	\
	@ManyToMany(mappedBy="Classes",cascade= CascadeType.ALL)\
	private Set<Subject> Subjects=new HashSet<>();\
\
	@OneToMany(mappedBy ="AcademicClass",cascade=CascadeType.ALL)\
	private Set<Student> students=new HashSet<>();	\
	\
	public int getCid() \{\
		return cid;\
	\}\
\
	public void setCid(int cid) \{\
		this.cid = cid;\
	\}\
\
	public String getName() \{\
		return name;\
	\}\
\
	public void setName(String name) \{\
		this.name = name;\
	\}\
\
	public int getDuration() \{\
		return duration;\
	\}\
\
	public void setDuration(int duration) \{\
		this.duration = duration;\
	\}\
\
	public Set<Subject> getSubjects() \{\
		return Subjects;\
	\}\
\
	public void setSubjects(Set<Subject> subjects) \{\
		Subjects = subjects;\
	\}\
\
	\
	//helper methods\
	public void addSubject(Subject subject)\
	\{\
		Subjects.add(subject);\
	\}\
\}\
\
\
\
\pard\pardeftab560\qc\partightenfactor0

\f7\b\fs28 \cf6 \ul Subjects\
\pard\pardeftab560\sl192\slmult1\partightenfactor0

\f6\b0\fs20 \cf6 \ulnone package org.simplilearn.lms.entities;\
\
import java.util.HashSet;\
import java.util.Set;\
\
\pard\pardeftab560\sl216\slmult1\partightenfactor0
\cf6 import javax.persistence.CascadeType;\
\pard\pardeftab560\sl192\slmult1\partightenfactor0
\cf6 import javax.persistence.Column;\
import javax.persistence.Entity;\
import javax.persistence.GeneratedValue;\
import javax.persistence.GenerationType;\
import javax.persistence.Id;\
import javax.persistence.JoinColumn;\
import javax.persistence.JoinColumns;\
import javax.persistence.JoinTable;\
import javax.persistence.ManyToMany;\
import javax.persistence.ManyToOne;\
\
@Entity\
\
\
public class Subject \{\
	\
	@Id\
	@GeneratedValue(strategy= GenerationType.IDENTITY)\
	private int sid;\
	\
	@Column\
	private String name;\
	@ManyToOne(cascade=CascadeType.ALL)\
	@JoinColumn(name="tid")\
	private Teacher teacher;\
	\
	\
	@ManyToMany(cascade=CascadeType.ALL)\
	@JoinTable(name="Subject_Class",\
	joinColumns = @JoinColumn(name="sid"),inverseJoinColumns=@JoinColumn(name="cid"))\
	private Set<AcadamicClass> classes=new HashSet<>();\
	\
	\
	\
	public int getSid() \{\
		return sid;\
	\}\
\
	public void setSid(int sid) \{\
		this.sid = sid;\
	\}\
\
	public String getName() \{\
		return name;\
	\}\
\
	public void setName(String name) \{\
		this.name = name;\
	\}\
\
	public Teacher getTeacher() \{\
		return teacher;\
	\}\
\
	public void setTeacher(Teacher teacher) \{\
		this.teacher = teacher;\
	\}\
	\
	//Helper Methods\
	\
	public void addClass(AcadamicClass acadamicclass) \{\
		classes.add(acadamicclass);\
	\}\
\
\}\
\
\
\pard\pardeftab560\sl192\slmult1\qc\partightenfactor0

\f7\b\fs30 \cf6 \ul Teacher\
\pard\pardeftab560\partightenfactor0

\f6\b0\fs20 \cf6 \ulnone package org.simplilearn.lms.entities;\
\
import java.util.HashSet;\
import java.util.Set;\
\
import javax.persistence.CascadeType;\
import javax.persistence.Column;\
import javax.persistence.Entity;\
import javax.persistence.GeneratedValue;\
import javax.persistence.GenerationType;\
import javax.persistence.Id;\
import javax.persistence.JoinColumn;\
import javax.persistence.JoinColumns;\
import javax.persistence.JoinTable;\
import javax.persistence.ManyToMany;\
import javax.persistence.ManyToOne;\
\
@Entity\
\
\
public class Subject \{\
	\
	@Id\
	@GeneratedValue(strategy= GenerationType.IDENTITY)\
	private int sid;\
	\
	@Column\
	private String name;\
	@ManyToOne(cascade=CascadeType.ALL)\
	@JoinColumn(name="tid")\
	private Teacher teacher;\
	\
	\
	@ManyToMany(cascade=CascadeType.ALL)\
	@JoinTable(name="Subject_Class",\
	joinColumns = @JoinColumn(name="sid"),inverseJoinColumns=@JoinColumn(name="cid"))\
	private Set<AcadamicClass> classes=new HashSet<>();\
	\
	\
	\
	public int getSid() \{\
		return sid;\
	\}\
\
	public void setSid(int sid) \{\
		this.sid = sid;\
	\}\
\
	public String getName() \{\
		return name;\
	\}\
\
	public void setName(String name) \{\
		this.name = name;\
	\}\
\
	public Teacher getTeacher() \{\
		return teacher;\
	\}\
\
	public void setTeacher(Teacher teacher) \{\
		this.teacher = teacher;\
	\}\
	\
	//Helper Methods\
	\
	public void addClass(AcadamicClass acadamicclass) \{\
		classes.add(acadamicclass);\
	\}\
\
\}\
\
\pard\pardeftab560\qc\partightenfactor0

\f7\b\fs30 \cf6 \ul Student\
\pard\pardeftab560\partightenfactor0

\f6\b0\fs20 \cf6 \ulnone package org.simplilearn.lms.entities;\
\
import javax.persistence.CascadeType;\
import javax.persistence.Column;\
import javax.persistence.Entity;\
import javax.persistence.GeneratedValue;\
import javax.persistence.GenerationType;\
import javax.persistence.Id;\
import javax.persistence.JoinColumn;\
import javax.persistence.ManyToOne;\
\
@Entity\
public class Student \{\
	\
	@Id\
	@GeneratedValue(strategy=GenerationType.IDENTITY)\
	private int stuId;\
	\
	@Column\
	private String name;\
	@Column\
	private String address;\
	@Column\
	private int age;\
	\
	@ManyToOne(cascade=CascadeType.ALL)\
	@JoinColumn(name="cid")\
	private AcadamicClass acadamicClass;\
\
	public int getStuId() \{\
		return stuId;\
	\}\
\
	public void setStuId(int stuId) \{\
		this.stuId = stuId;\
	\}\
\
	public String getName() \{\
		return name;\
	\}\
\
	public void setName(String name) \{\
		this.name = name;\
	\}\
\
	public String getAddress() \{\
		return address;\
	\}\
\
	public void setAddress(String address) \{\
		this.address = address;\
	\}\
\
	public int getAge() \{\
		return age;\
	\}\
\
	public void setAge(int age) \{\
		this.age = age;\
	\}\
\
	public AcadamicClass getAcadamicClass() \{\
		return acadamicClass;\
	\}\
\
	public void setAcadamicClass(AcadamicClass acadamicClass) \{\
		this.acadamicClass = acadamicClass;\
	\}\
	\
	\
\}\
						
\f7\b\fs30 \ul Hibernate configuration file\

\f6\b0\fs20 \ulnone \
package org.simplilearn.lms.config;\
 \
import java.util.Properties;\
\
import javax.security.auth.Subject;\
\
import org.hibernate.SessionFactory;\
import org.hibernate.cfg.Configuration;\
import org.hibernate.cfg.Environment;\
import org.simplilearn.lms.entities.AcadamicClass;\
import org.simplilearn.lms.entities.Student;\
import org.simplilearn.lms.entities.Teacher;\
import org.simplilearn.lms.entities.User;\
 \
\
public class HibConfig \{\
	\
	public static SessionFactory getSessionFactory() \{\
		Configuration configuration = new Configuration();\
		Properties properties=new Properties();\
		properties.put(Environment.DRIVER, "com.mysql.cj.jdbc.Driver");\
		properties.put(Environment.URL, "jdbc:mysql://localhost:3306/AdminDb");\
		properties.put(Environment.USER,"root");\
		properties.put(Environment.PASS,"Sruthi@1990");\
		properties.put(Environment.HBM2DDL_AUTO,"update");\
		properties.put(Environment.SHOW_SQL,true);\
		properties.put(Environment.FORMAT_SQL,true);\
		configuration.setProperties(properties);\
		configuration.addAnnotatedClass(Teacher.class);\
		configuration.addAnnotatedClass(Student.class);\
		configuration.addAnnotatedClass(AcadamicClass.class);\
		configuration.addAnnotatedClass(Subject.class);\
		configuration.addAnnotatedClass(User.class);\
		SessionFactory sessionFactory=configuration.buildSessionFactory();\
		return sessionFactory;\
		\
	\}\
\
\}}